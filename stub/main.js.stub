"use strict";

const electron      = require("electron");
const app           = electron.app;
const BrowserWindow = electron.BrowserWindow;
const fs            = require("fs");
const path          = require("path");
const WIDTH         = __WIDTH__;
const HEIGHT        = __HEIGHT__;
const URL           = "__URL__";
const WORKINGDIR    = "__WORKINGDIR__";
const SKIPS         = [__SKIPS__];
const END           = __END__;
const SLIDE_TYPE    = "__SLIDE_TYPE__";

app.on("window-all-closed", function() {
    if ( process.platform !== "darwin" ) {
        app.quit();
    }
});

let mainWindow;

app.on("ready", function() {
    mainWindow = new BrowserWindow({
        width: WIDTH,
        height: HEIGHT
    });
    mainWindow.on("closed", function() {
        mainWindow = null;
    });
    switch (SLIDE_TYPE) {
        case "url":
            openSlideTypeURL(1);
            break;
        case "scroll":
            openSlideTypeScroll();
            break;
        default:
            console.log("Unexpected slide type: " + SLIDE_TYPE);
            app.quit();
    }
});

function openSlideTypeURL(pageNumber) {
    if ( SKIPS.indexOf(pageNumber) !== -1 ) {
        openSlideTypeURL(pageNumber + 1, false);
        return;
    }
    mainWindow.loadURL(URL + "#" + pageNumber);
    const webContents = mainWindow.webContents;
    webContents.executeJavaScript(
        "(function(c) { c && (c.style.display = 'none'); })(document.querySelector('.tk-pager, #control'));"
    );
    setTimeout(function() {
        console.log("Taking screenshot " + pageNumber + " of " + END + "...");
        mainWindow.capturePage({
            x:      0,
            y:      0,
            width:  WIDTH,
            height: HEIGHT
        }, function(image) {
            fs.writeFile(path.join(WORKINGDIR, "/shot" + pageNumber + ".png"), image.toPNG(), function(err) {
                if ( err ) {
                    console.log("Failed to screen shot");
                } else if ( pageNumber === END ) {
                    console.log("Screenshot has taken!");
                    app.quit();
                } else {
                    openSlideTypeURL(pageNumber + 1);
                }
            });
        });
    }, 3000);
}

function openSlideTypeScroll() {
    mainWindow.loadURL(URL);
    const webContents = mainWindow.webContents;
    webContents.on('did-finish-load', () => {
        webContents.executeJavaScript(
            "(function(c) { c && (c.style.display = 'none'); })(document.querySelector('tk-pager'));"
        ).then(() => {
            const next = function(pageNumber) {
                webContents.executeJavaScript(
                    "(function(e) { e.initEvent('keydown', true, true); e.keyCode = 39; document.dispatchEvent(e); })(document.createEvent('Event'));",
                    true,
                ).then(result => {
                    handler(pageNumber + 1);
                });
            };

            const handler = function(pageNumber) {
                if ( SKIPS.indexOf(pageNumber) !== -1 ) {
                    setTimeout(function() { next(pageNumber); }, 1000);
                    return;
                }
                console.log("Taking screenshot " + pageNumber + " of " + END + "...");
                mainWindow.capturePage({
                    x:      0,
                    y:      0,
                    width:  WIDTH,
                    height: HEIGHT
                }, function(image) {
                    fs.writeFile(path.join(WORKINGDIR, "/shot" + pageNumber + ".png"), image.toPng(), function(err) {
                        if ( err ) {
                            console.log("Failed to screen shot");
                        } else if ( pageNumber === END ) {
                            console.log("Screenshot has taken!");
                            app.quit();
                        } else {
                            setTimeout(function() { next(pageNumber); }, 1000);
                        }
                    });
                });
            };
            handler(0);
        });
    });
}
